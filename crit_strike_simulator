'''
This reworked version will take 4 numbers as a format of xx.xx so eg: 22,78%
The program will place all 4 digits in a 1-9 random number selector and
will create a list with those numbers eg: [2,2,7,8]

each digit will be rolled individually 10 times with a range of 10 and the checking number will be
 x<= input number. therefore a counter is added to "tick" every time the check number is applied or not.
at 2 the and range 10 there are number 1 and 2 which will tick the counter and any other will not

at 7, the numbers from 1 to 7 will tick the counter, others will not

This will be repeated 10 times and a rounded average will be printed for each number, divided or multiplied by 10
according to which positional value the number stands

In my previous experiments I saw that a 1 to 9 randint produces pretty accurate values of expected percentages 
this is why I'm taking this method.

'''

import random
from time import sleep
import math

def myround(x, prec=2, base=.05):
  return round(base * round(float(x)/base),prec)

user_value = float((input("Please enter your crit strike chance: \n")))

user_list = [int(i) for i in str(user_value) if i.isdigit()]
print(user_list)

rolls = 0
# check numbers for the digits
a = 0
b = 0
c = 0
d = 0

while(rolls <= 100):
    
    rolls += 1
    # print("roll number", rolls) # test print
    tens = random.randint(1,9)
    if (tens <= user_list[0]):
        # print("Check number for tens has been incremented") # test print
        a += 1
        

    ones = random.randint(1,9)
    if (ones <= user_list[1]):
        # print("Check number for ones has been incremented") # test print
        b += 1

    first_decimal = random.randint(1,9)
    if (first_decimal <= user_list[2]):
        # print("Check number for first decimal has been incremented") # test print
        c += 1

    second_decimal = random.randint(1,229) 
    if (second_decimal <= user_list[3]):
        # print("Check number for second decimal has been incremented") # test print
        d += 1

if (rolls == 101):

    print (a,b,c,d)

    if(a % 10 /10 >= 0.5):
        #print(a)
        myround(a,2,1)
        #print("rounded:", a)
    tens_result = a // 10 * 10

    if(b % 10 /10 >= 0.5):
        myround(b,2,1)
    ones_result = b // 10

    if(c % 10 /10 >= 0.5):
        myround(c,2,1)
    first_decimal_result = c / 100

    if(d % 10 /10 >= 0.5):
        myround(d,2,1)
    second_decimal_result = d / 1000

    result = (tens_result + ones_result + first_decimal_result + second_decimal_result )

    print(result)




